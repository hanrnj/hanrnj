함수짤때 프로세스
1. 리턴타입 결정
2. 함수명 결정
3. 파라미터 선언 = 변수 선언  = int a 와 같이 타입 + 변수가 있어야한다.
4. 리턴값 설정

public static(함수가 클래스명으로 접근했을때 static) Rectangle(타입) compareRect(Rectangle rec1, Rectangle rec2)

System.in == 키보드

---------------------------------------------------------------------------------------
사칙연산 계산기

import java.util.Scanner;

public class Calculator {
	
	public static int add(int num1 , int num2) {
		return num1 + num2;
	}
	public static int min(int num1 , int num2) {
		return num1 - num2;
	}
	public static int dul(int num1 , int num2) {
		return num1 * num2;
	}
	public static int div(int num1 , int num2) {
		return num1 / num2;
	}
	
	void execute() {
		char yn;
		int num1, num2, result = 0;
		String op;
		
		do {
			
		Scanner sc = new Scanner(System.in);
			
		System.out.print("첫번째 숫자를 넣으세요:");
		num1 = sc.nextInt();
		
		System.out.print("연산기호를 넣으세요:");
		op = sc.next();
		
		System.out.print("두번째 숫자를 넣으세요:");
		num2 = sc.nextInt();
		
		switch(op) {
		
		case "+":
			result = add(num1, num2);
			break;
		case "-":
			result = min(num1, num2);
			break;
		case "*":
			result = dul(num1, num2);
			break;
		case "/":
			result = div(num1, num2);
			break;
		
		default:
			break;
		}
		
		System.out.println(result);
		
		System.out.print("continue? Y or N:");
		
		yn = sc.next().charAt(0);
		
	} while(yn == 'y' || yn == 'Y');
		
		System.out.println("프로그램종료");
	}
}

		Calculator calculator = new Calculator();
		calculator.execute();

------------------------------------------------------------------------------
int[] ref = new int[5];

ref의 데이터타입은 int형 배열 참조형!!!!


arraycopy 함수
System.arraycopy(ar1(복사대상), 0(0번째부터), ar2, 3(0,1,2,3 -> 4번째부터), 4(4개를 복사));

============================================================================

1. 아래의 Grade 클래스를 완성하시오.

   - 3과목은 스캐너 객체로 받음


Grade me = new Grade(math, science, english);

System.out.println("평균은 "+me.average()); // average()는 평균을 계산하여 리턴



2.아래와 같이 원의 넓이를 구하는 프로그램을 작성하시오.


원의 반지름을 입력하세요 : 10

원의 넓이는 314 입니다.

계속 하시겠습니까 yes면 y No이면 n: y

원의 반지름을 입력하세요 : 10

원의 넓이는 314 입니다.

계속 하시겠습니까 yes면 y No이면 n: n

프로그램을 종료 합니다.


public class Circle {
	private static final double PI = 3.14;
	private int radius;
	
	public double area(int radius) {
		this.radius = radius;
		return radius * radius * PI;
	}
	
	public void CircleLogic() {
		int num1, num2 = 0;
		char re ;
		
		while(true) {
		
		Scanner cir = new Scanner(System.in);
		
		System.out.print("원의 반지름을 입력하세요:");
		num1 = cir.nextInt();
		
		System.out.print("원의 넓이는" + area(num1) + "입니다.");
		System.out.println();
		
		System.out.print("계속 하시겠습니까 yes면 y No이면 n:");
		re = cir.next().charAt(0);
		
		if(re == 'y' || re == 'Y') {
			CircleLogic();
		}else {
			System.out.println("프로그램을 종료 합니다.");
		}
		break;
	}	
	}
}

	public static void main(String[] args) {
		
		Circle cir = new Circle();
		cir.CircleLogic();




3.아래와 같은 프로그램을 작성하시오.


아래중 고르세요(1.삼각형 2.사각형 3.원) >> 2

가로 입력하세요>>4

세로 입력하세요>>5

넓이는 20입니다.

계속 하시겠습니까 yes면 y No이면 n: y

아래중 고르세요(1.삼각형 2.사각형 3.원) >> 1

가로 입력하세요>>4

세로 입력하세요>>5

넓이는 10입니다.

계속 하시겠습니까 yes면 y No이면 n: n

프로그램을 종료 합니다.


public class ALLarea {
	private static int width,height,radius;
	
	public static int triArea(int width, int height) {
		return width * height * 2;
	}
	public static int recArea(int width, int height) {
		return width * height ;
	}
	public static double cirArea(int radius) {
		return radius * radius * Math.PI ;
	}
	
	public static void allArea() {
		int num1 = 0, num2 = 0, num3 = 0, num4 = 0 ;
		char dnd ;
		while(true) {
		
		Scanner allarea = new Scanner(System.in);
		
		System.out.print("아래중 고르세요(1.삼각형 2.사각형 3.원)");
		num1 = allarea.nextInt();
		
		System.out.print("가로 입력하세요");
		num2 = allarea.nextInt();
		
		System.out.print("세로 입력하세요");
		num3 = allarea.nextInt();
		
		if(num1 == 1)
			System.out.print("넓이는" + triArea(num2,num3) + "입니다.");
		
		if(num1 == 2)
			System.out.print("넓이는" + recArea(num2,num3) + "입니다.");
		
		if(num1 == 3)
			System.out.print("넓이는" + cirArea(num2) + "입니다.");
			
		System.out.println("계속 하시겠습니까 yes면 y No이면 n");
		dnd = allarea.next().charAt(0);
		
		if(dnd == 'y' || dnd == 'Y') {
			allArea();
		}else {
			System.out.println("프로그램을 종료 합니다.");
		}
		break;
		}
	}
}



	public static void main(String[] args) {

		 ALLarea allarea = new  ALLarea();
		 allarea.allArea();



4. 6개의 정수를 담는 배열을 선언후, 로또 번호 6개 생성하여 출력하는

프로그램을 짜시오.

-번호생성은 Random 함수 또는 객체를 참고 할것.

-숫자가 중복되지 않을것.

public class ArrayTest {

	public static void main(String[] args) {
		int[] lotto = new int[6];
		
		for(int i = 0; i < lotto.length; i++) {
			lotto[i] = (int) (Math.random()*45)+1; 
		
		for(int j = 0; j<i; j++) {
			if(lotto[i] == lotto[j]) {
				j--;
				break;
			}
		}
		}	
		for(int i = 0; i < lotto.length; i++) {
		System.out.print(lotto[i] + " ");
		}
	}
}


5.아래의 메모리 그림을 그리시오.

   int[] ref = new int[5];

   Box[] ar = new Box[3];

   // 배열에 인스턴스 저장

   ar[0] = new Box("First");

   ar[1] = new Box("Second");

   ar[2] = new Box("Third");



6.가위바위보 게임을 만드시오.(시간남을때 해주세요)







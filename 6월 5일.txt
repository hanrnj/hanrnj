System.CurrentTimeMillis(); 현재시간체크


1. 아래의 interface 를 구현하시오.

interface IGugudan{

void gugugdan();      //구구단 출력

}

interface lGugudan{
	void gugugdan();
}

class Gugudan implements lGugudan {
	
	@Override
	 public void gugugdan() {
		for(int i = 1; i <= 9; i++) {
			for(int j = 1; j <= 9; j++) {
				System.out.print(j + "x" + i + "=" + i*j + "\t");
			}
			System.out.println();
		}
	}
}

public class Gugu {

	public static void main(String[] args) {
		Gugudan gugu = new Gugudan();
		
		gugu.gugugdan();

	}

}


2.아래의 interface 를 구현하시오.

interface IStarPrint{

	void starPrint(int n); //      

}



*

**

***

****

*****



interface lStarPrint{
	void starPrint(int n);
}


class Starf implements lStarPrint {
	@Override
	public void starPrint(int n) {
		for(int i = 0; i < n; i++) {
			for(int j = 0; j < i+1; j++) {
				System.out.print("*");
			}
			System.out.println();
			System.out.println(" ");
		}
	}
}

public class Star {

	public static void main(String[] args) {
		Starf star = new Starf();
		star.starPrint(3);

	}

}



3. wrapper 클래스에 대하여 설명하시오.
기본형 타입을 객체로 만들어 주는것.


4.boxing 과 unboxing 에 대하여 설명하시오.
boxing은 기본형 타입의 변수를 객체로 만들어 주는것이고,
unboxing은 그 값을 반환하는것 입니다.



5.아래의 메모리를 그리고, 컴파일러가 실행하는 구문을 적으시오.

 Integer num = 10;

   num++;




6.오토박싱과 언박싱에 대하여 설명하시오.

오토박싱의 경우 명시적으로 기본자료형을 래퍼클래스로 감싸주지 않아도 박싱(포장 = wrapping) 해 주는 것입니다.
오토 언박싱은 명시적으로 기본자료형으로 변환하지 않아도 포장을 풀어줍니다.




7.461page 20-1 번 푸시오.
프로그램 사용자로부터 임의의 정수 a와 z 를 입력받는다. 그리고 a와z를 포함하여 그 사이에 있는
난수 10개를 생성하여 출력하는 프로그램을 작성해라.





8.가위바위보 게임을 조별로 어떻게 짜면 되는지 논의 하고,가위바위보 게임을 완성하시오. 

import java.util.Random;
import java.util.Scanner;

public class Hahaha {

	public static void main(String[] args) {
		Random rand = new Random();
		Scanner scan = new Scanner(System.in);
		
		
		System.out.println("0 = 가위 , 1 = 바위 , 2 = 보");
		int num1 = scan.nextInt();
		
		switch(num1) {
		case 0:
			System.out.print("내가낸것 : 가위");
			System.out.println();
			break;
		case 1:	
			System.out.print("내가낸것 :바위");
			System.out.println();
			break;
		case 2:
			System.out.print("내가낸것 :보");
			System.out.println();
			break;
			default:
				System.out.println("값을 잘못입력하셧습니다.");
				break;
		}

			int num = (int)(Math.random()*3);
			
			if(num == 0) {
				System.out.println("컴퓨터가 낸것 :가위");
			}if(num == 1) {
				System.out.println("컴퓨터가 낸것 :바위");
			}if(num == 2) {
				System.out.println("컴퓨터가 낸것 :보");
			}
			
	
		if(num1 == 0 && num == 0) {
			System.out.println("비겼습니다.");
		}if(num1 == 0 && num == 1) {
			System.out.println("졌습니다.");
		}if(num1 == 0 && num == 2) {
			System.out.println("이겼습니다.");
		}if(num1 == 1 && num == 0) {
			System.out.println("이겼습니다.");
		}if(num1 == 1 && num == 1) {
			System.out.println("비겼습니다.");
		}if(num1 == 1 && num == 2) {
			System.out.println("졌습니다.");
		}if(num1 == 2 && num == 0) {
			System.out.println("졌습니다.");
		}if(num1 == 2 && num == 1) {
			System.out.println("이겼습니다.");
		}if(num1 == 2 && num == 2) {
			System.out.println("비겼습니다.");
		}			
	}
}


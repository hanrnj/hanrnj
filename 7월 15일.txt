javascript
onload: 호출된 웹문서가 모두 완료된 후 자동으로 실행

html파일을 동적으로 변환시키기위한 javascript 
DOM : html태그를 메모리에 올려서 태그 안에 내용을 동적으로 바꾸기 위한 것 







1.mvc_board 에서 list 를 받아 오기위한 sql 문을 작성하시오.

sql: select * from mvc_board order by bgroup desc, bstep asc;



2.스프링 으로 게시판을 짜기위한 설계도를 그리시오.




3.스프링에서의 한글 처리 방법은?
<web.xml>에 입력
<filter> 
    <filter-name>encodingFilter</filter-name> 
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> 
    <init-param> 
       <param-name>encoding</param-name> 
       <param-value>UTF-8</param-value> 
    </init-param> 
    <init-param> 
       <param-name>forceEncoding</param-name> 
       <param-value>true</param-value> 
    </init-param> 
 </filter> 
 <filter-mapping> 
    <filter-name>encodingFilter</filter-name> 
    <url-pattern>/*</url-pattern> 
 </filter-mapping> 




4.Dom 이란 무엇인가?

DOM : html태그를 메모리에 올려서 태그 안에 내용을 동적으로 바꾸기 위한 것 




5.screen 객체에 대하여 설명하시오.

screen 객체는 사용자의 디스플레이 화면에 대한 다양한 정보를 저장하는 객체입니다.

document.write("현재 사용자의 디스플레이 화면의 너비는 " + screen.width + "픽셀입니다.<br>");
document.write("현재 사용자의 디스플레이 화면의 높이는 " + screen.height + "픽셀입니다.<br>");

document.write("현재 브라우저 창의 너비는 " + window.outerWidth + "픽셀입니다.<br>");
document.write("현재 브라우저 창의 높이는 " + window.outerHeight + "픽셀입니다.<br>");





6.location 객체의 용도에 대하여 설명하시오.

location 객체는 현재 브라우저에 표시된 HTML 문서의 주소를 얻거나, 브라우저에 새 문서를 불러올 때 사용할 수 있습니다.

function openDocument() {

    location.assign("/index.php");

}

function openDocumentWithReplace() {

    location.replace("/index.php");

location 객체의 assign() 메소드는 브라우저 창에 지정된 URL 주소에 존재하는 문서를 불러옵니다.
반면에 replace() 메소드는 새 문서를 불러오기 전에, 현재 문서를 브라우저의 히스토리에서 제거한다는 점이 assign() 메소드와 다릅니다.
location 객체의 reload() 메소드는 브라우저 창에 현재 문서를 다시 불러옵니다.





7.windows.onload 에 대하여 설명하시오.

windows.onload : 호출된 웹문서가 모두 완료된 후 자동으로 실행



8. 아래의 소스코드는 버튼을 누를때 마다, hello world를 옆으로 찍는다.
누를때 마다 개행을 넣이 찍도록 하시오. 
<!DOCTYPE html>
<html>
<body>

<p>Click the button to create a Text Node.</p>

<button onclick="myFunction()">Try it</button>

<script>
function myFunction() {
	
  var br = document.createElement("p");
  var t = document.createTextNode("Hello World");
  
  br.appendChild(t);
  document.body.appendChild(br);
  
}
</script>

</body>
</html>




9. 아래를 자바 스크립트로 짜시오.
버튼 하나를 생성후 버튼을 누를때 마다 현재 시간을 나타내는 프로그램을 만드시오.


<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<!DOCTYPE html>
<html>
	<head>
		<meta charset="EUC-KR">
		<title>Insert title here</title>
		
	<script>		
	
			function myFunction(){
			
			var element = document.createElement("p");
			var textNode = document.createTextNode(getNowDate());
			
			element.appendChild(textNode);
			document.body.appendChild(element);
			
		}
		
	</script>
		
	</head>
	<body>
	
	<p>Click the button to create a Text Node.</p>

	<button onclick="myFunction()">Try it</button>
	
	
		<script>
		
			function getNowDate() {
				
				  var nowDate = new Date();
				  var dayArr = new Array('일','월','화','수','목','금','토');
				  var print = "";
				  	  print += nowDate.getFullYear() + "년" + " ";
				  	  print += (nowDate.getMonth() + 1) + "월" + " ";
				  	  print += nowDate.getDate() + "일" + " ";
				  	  print += dayArr[nowDate.getDay()] + "요일" + " ";
				  	  print += nowDate.getHours() + "시" + " ";
				  	  print += nowDate.getMinutes() + "분" + " ";
				  	  print += nowDate.getSeconds() + "초" + " ";
				  	  
				  	  return print;
				  
				}
		
		</script>
	</body>
</html>

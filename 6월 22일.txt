세션 아이디는 웹 브라우저별로 한개씩만 부여
다른 웹 브라우저에서 접속하는걸 구분하기 위해서 세션 아이디를 부여

<SQL> 

1982 01 01년 이후로 입사한 사람
select * from emp where HIREDATE >= '1982/01/01';

SAL가 2000~3000 사이인 사람
SELECT * FROM EMP WHERE SAL NOT BETWEEN 2000 AND 3000;

1980년에 입사한 사람
SELECT * FROM EMP WHERE HIREDATE BETWEEN '1980/01/01' AND '1980/12/31';

이름이 F로 시작하는 사람
SELECT * FROM EMP WHERE ENAME LIKE 'F%';

위치 상관없이 이름 중에 A가 들어가는 사람
SELECT * FROM EMP WHERE ENAME LIKE '%A%';

이름이 N으로 끝나는 사람
SELECT * FROM EMP WHERE ENAME LIKE '%N';

두번째 글자가 A인 사람
SELECT * FROM EMP WHERE ENAME LIKE '_A%';

세번째 글자가 A인 사람
SELECT * FROM EMP WHERE ENAME LIKE '__A%';

이름에 A를 포함하지 않는 사람
SELECT * FROM EMP WHERE ENAME NOT LIKE '%A%';

커미션을 받지 못하는 사람
SELECT * FROM EMP WHERE COMM IS (NOT) NULL;
NULL의 의미 : 미확정, 알 수 없는 값을 의미한다. 고로 연산, 할당, 비교가 불가능하다.

10번 부서의 월급 평균, 최대값, 최소값을 구하시오
SELECT AVG(SAL), MAX(SAL), MIN(SAL) FROM EMP WHERE DEPTNO = 10 ;

A로 시작하는 사원이름과 급여를 출력하시오
SELECT ENAME,SAL FROM EMP WHERE ENAME LIKE 'A%'; 

사람들의 급여를 오름차순정렬
SELECT * FROM emp ORDER BY SAL ASC;

사람들의 급여를 내림차순정렬
SELECT * FROM emp ORDER BY SAL DESC;

가장 최근의 입사한 사원부터 출력하는 쿼리문
SELECT * FROM EMP ORDER BY HIREDATE DESC;

사원들이 소속되어 있는 부서의 번호를 출력
SELECT DISTINCT DEPTNO FROM EMP; 

한 행으로 결과를 출력하기 위한 Test용 테이블
SELECT 24*60 FROM DUAL;

현재 날짜 출력
SELECT SYSDATE FROM DUAL;

-10에 대한 절댓값
Select ABS(-10) FROM DUAL;

소수점 아래를 버리는 함수
SELECT 34.543, FLOOR(32.543) FROM DUAL;

반올림 하는 함수
SELECT 34.543, ROUND(32.543) FROM DUAL;

소수점 첫째자리까지 표현 / 둘째자리에서 반올림
SELECT 34.543, ROUND(32.443,1) FROM DUAL;

소수점 밑으로 버리는 함수 ( . 이 기준 -1은 10)
SELECT TRUNC(15.79,1) FROM DUAL;

나누기 연산을 한 후 나머지를 결과로 되돌려주는 함수
SELECT MOD(27,2) FROM DUAL;

대문자로 변환하는 함수
SELECT 'welcome to Oracle' (AS)생략가능 "적용전"(클론명), UPPER('welcome to Oracle') (AS)생략가능 "적용후"(클론명) FROM DUAL;

소문자로 변환하는 함수
SELECT 'WELCOM TO ORACLE' (AS)생략가능 "적용전"(클론명), LOWER('welcome to Oracle') (AS)생략가능 "적용후"(클론명) FROM DUAL;

문자열 길이
SELECT LENGTH('CANDIDE'), LENGTH('오라클') FROM DUAL;
----> 7,3

SELECT LENGTHB('CANDIDE'), LENGTHB('오라클') FROM DUAL;
----> 7,9
영문은 아스키코드로 1바이트씩 7개니까 7바이트로 처리 한글은 3바이트씩 잡아먹어서 9바이트

특정 문자의 위치를 구하는 함수
SELECT INSTR('WELCOM TO ORACLE', 'O') FROM DUAL;

인덱스 4부터 시작해서 문자 3개를 추출하는 쿼리문( 오라클에서 인덱스는 0이아닌 1부터시작한다)
SELECT SUBSTR('WELCOM TO ORACLE', 4, 3) FROM DUAL;

사원들의 입사일에서 입사 년도와 입사 달을 출려하는 쿼리문
SELECT ENAME, 19||SUBSTR(HIREDATE,1,2) 년도, SUBSTR(HIREDATE,4,2) AS 달 FROM EMP;

20자리를 마련한 후 오른쪽에 대상 문자열을 출력하고, 왼쪽에 생긴 빈 공간을 '#'기호로 채우는 쿼리문
SELECT LPAD('ORACLE', 20,'#')FROM DUAL;

20자리를 마련한 후 왼쪽에 대상 문자열을 출력하고, 오른쪽에 생긴 빈 공간을 '#'기호로 채우는 쿼리문
SELECT RPAD('ORACLE', 20,'#')FROM DUAL;

왼쪽 공백 문자 삭제 
SELECT LTRIM(' ORACLE') FROM DUAL;

오른쪽 공백 문자 삭제 
SELECT LTRIM('ORACLE ') FROM DUAL;

양 사이드 공백 삭제
SELECT TRIM(' ORACLE  ') FROM DUAL;

A를 제외한 문자 출력
SELECT TRIM ('A' FROM 'AAAAAAAABBBBBBBB') FROM DUAL;




1.session 내장객체에 대하여 설명하시오.

String getId() 

- 해당 웹 브라우저에 대한 고유한 세션 ID를 리턴한다. 

long getCreationTime() 

- 해당 세션이 생성된 시간을 리턴한다. 

long getLastAccessedTime()

- 웹 브라우저의 요청이 시도된 마지막 접근시간을 리턴한다. 

void setMaxInactiveInterval(time)

- 해당 세션을 유지할 시간을 초단위로 설정한다.

int getMaxInactiveInterval() 

- 기본값은 30분으로 setMaxInactiveInterval(time) 로 지정된 값을 리턴한다. 

boolean isNew() 

- 현재의 웹 브라우저가 새로 부른 즉, 새로 생성된 세션의 경우 true 값을 리턴한다. 

void invalidate() 

- 현재 정보의 유지로 사용 시, 설정된 세션의 속성 값을 모두 제거한다. 주로 세션을 무효화 시킬때 사용 



2.jsp 에서 에러 처리 하는 2가지 방법에 대하여 설명하시오.

1. page 지시자를 이용한 예외처리

 <%@ page errorPage="에러발생시 보여주는 페이지주소" %>      --->> 에러 페이지 주소
 이 페이지에서 에러가 날 경우 지정된 페이지를 화면에 나타내게 된다.

2. web.xml 파일을 이용한 예외처리

<에러가 발생시 예외처리 할 페이지에 작성>
<%@ page isErrorPage="true" %>
<% response.setStatus(200); %>

<web.xml>파일에 작성
  <error-page>
  	<error-code>404</error-code>
  	<location>/error404.jsp</location>
  </error-page>
  <error-page>
  	<error-code>500</error-code>
  	<location>/error500.jsp</location>
  </error-page>

3.jsp_13_2_ex1_cookieex 의 실행순서를 그림으로 그리시오.



4.session id 에 대하여 설명하시오.

세션 아이디는 웹 브라우저별로 한개씩만 부여
다른 웹 브라우저에서 접속하는걸 구분하기 위해서 세션 아이디를 부여


5.bean 에 대하여 설명하시오.

JAVA언어의 데이터(속성)와 기능(메소드)으로 이루어진 클래스 
getter,setter 메소드!



6.Student 클래스를 작성후 액션태그를 이용하여 아래의 출력 결과가 나오도록 하시오.
================
이름 : 홍길동
나이 : 13
학년 : 6
번호 : 7
넓이는 : 314.1592653589793


<Student.jsp>

<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
 <jsp:useBean id="student" class= "jsp_0622.Student"  scope = "page"></jsp:useBean>
<!DOCTYPE html>
<html>
	<head>
		<meta charset="EUC-KR">
		<title>Insert title here</title>
	</head>
	<body>
		<jsp:setProperty property="name" name="student" value = "홍길동"/>
		<jsp:setProperty property="age" name="student" value = "13"/>
		<jsp:setProperty property="grade" name="student" value = "6"/>
		<jsp:setProperty property="studentNum" name="student" value = "7"/>
		<jsp:setProperty property="area" name="student" value = "10"/>
		
		이름 :<jsp:getProperty property="name" name="student"/><br />
		나이 :<jsp:getProperty property="age" name="student"/><br />
		학년 :<jsp:getProperty property="grade" name="student"/><br />
		번호 :<jsp:getProperty property="studentNum" name="student"/><br />
		넓이 :<jsp:getProperty property="area" name="student"/><br />
	</body>
</html>


Student.java

package jsp_0622;

public class Student {

	private String name;
	private int age;
	private int grade;
	private int studentNum;
	private double area;
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public int getAge() {
		return age;
	}
	public void setAge(int age) {
		this.age = age;
	}
	public int getGrade() {
		return grade;
	}
	public void setGrade(int grade) {
		this.grade = grade;
	}
	public int getStudentNum() {
		return studentNum;
	}
	public void setStudentNum(int studentNum) {
		this.studentNum = studentNum;
	}
	public double getArea() {
		return area*area*Math.PI;
	}
	public void setArea(double area) {
		this.area = area;
	}
}

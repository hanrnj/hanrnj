메소드가 같은 이름일때 참조하게 되는 두가지 정보 -> 메소드 오버로딩
- 파라미터의 타입형,갯수

함수 오버로딩의 가장 큰 예
- println 8가지 기본형

this = 자기자신 호출

String 문자 char형의 배열의 모음 주소를 담는다

공백 유니코드 32번

글자비교는 equals

String 인스턴스는 immutable 인스턴스 : 원판이 변하지 않는다.

String 메소드
1. concat
2. substring(2,5)  
3. equals
4. compareTo 사전의 앞에 위치하는 문자
5. compareToIgnoreCase
6. valueOF
7. StringBuilder



1.메써드 오버로딩 이란?

- 같은 이름의 메소드를 여러 개 가지면서 매개변수의 유형과 개수가 다르도록 하는 기술


2.메써드 오버로딩의 대표적인 예와,메써드 오버로딩시 달리해야할 2가지는?
- System.out.println(); 매개변수의 타입형, 갯수


3.this는 무엇이며, This의 용도 2가지는?
- this란 자기 자신 호출
1. 자기 자신의 생성자를 호출할 때 사용
2. 필드(전역변수)와 메소드 또는 생성자의 매개변수가 동일할 때 인스턴스 필드임을 명확히 하기 위해 사용한다.


4.문자열 생성의 두가지 방법은?
- String, " "


5.아래의 차이는?

 String str1 = new String("Simple String");

 String str2 = "Simple String";

- str1은 Simple String 이라는 문자열을 가진 객체를 생성하고 있고
  str2는 객체를 생성하고 str1의 Simple String의 참조값을 가지고 오고 있다. 
  따라서 str1과 str2는 서로 다른 객체 이지만 Simple String 이라는 같은 문자열을 가지고 있다.


6. 아래가 false 를 리턴하는 이유와 true로 리턴하게 할려면?

if(str1 == str2) 

==는 str1과 str2의 참조값을 비교하고 있기 때문에 false를 출력하고
문자열을 비교해야 true를 출력한다.
문자열을 비교하기 위해서는 equals함수를 이용해야한다.
-> if(str1.equals(str2))


7.문제 11-1(263page) 프로그램을 작성하시오.
주민등록 번호의 중간에 삽입된 - 를 지우고 공백으로 채워서 출력하는 프로그램을 작성해보라. 990925 -1012999

	StringBuilder str = new StringBuilder("990925-1012999");
		
		str.replace(6, 7 , " ");
		System.out.println(str);


8.StringBuilder 과 StringBuffer 의 차이는?
- StringBuilder는 쓰레드에 안전하지 않지만 StringBuffer는 쓰레드에 안전합니다. 
  대신 StringBuffer는 속도저하가 있다.


9.아래를 String 함수등을 사용하여 프로그래밍 하시오.

//1. 마지막 3글자 자르기

String str = "ABCDEFG"; 

String result = 소스코딩      

System.out.println(result)

 //결과값EFG

		StringBuilder str = new StringBuilder("ABCDEFG");
		
		str.delete(0, 4);
		System.out.println(str);



	public static void main(String[] args) {
		String str = "ABCDEFG";
		String result = str.substring(4,7);
		System.out.println(result);

	}




11.아래를 String 함수등을 사용하여 프로그래밍 하시오.

//2. 특정문자 이후의 문자열 제거

String str = "ABCD/DEFGH";

String result = 소스코딩

System.out.println(result); 

//결과값 DEFGH

		StringBuilder str = new StringBuilder("ABCD/DEFGH");
		
		String result = str.substring(5, 10);
		System.out.println(result);




12. 아래를 프로그래밍 하시오.

Rectangle r1 = new Rectangle(5,6);

Rectangle r2 = new Rectangle(7,9);



Rectangle r3 = Rectangle.compareRect(r1,r2);



System.out.println(r3.getHeight() + " : " + r3.getWidth()  + "입니다.");

=============================

출력 : 9 : 7 입니다.

public class Rectangle {
	private int width;
	private int height;
	
	public Rectangle(int width, int height) {
		this.width = width;
		this.height = height;
	}
	
	public static Rectangle compareRect(Rectangle rec1, Rectangle rec2) {
		Rectangle max = rec1;
		if((max.height > rec2.height) && (max.width > rec2.width)) {
			max = rec1;
		}else if((max.height < rec2.height) && (max.width < rec2.width)) {
			max = rec2;
		}return max;
	}
	
	public int getHeight() {
		return height;
	}
	public int getWidth() {
		return width;
	}
}

-----------------------------------------------------------------------------------------------------------


public class Rectangle {
	private int width;
	private int height;
	
	public Rectangle(int width, int height) {
		this.width = width;
		this.height = height;
	}
	
	public int getArea() {
		return width * height;
	}
	
	public static Rectangle compareRect(Rectangle r1, Rectangle r2) {
		Rectangle rec = null;
		if((r1.getArea()) > (r2.getArea())) {
			rec = r1;
		}else {
			rec = r2;
		} 
		return rec;
	}
	
	public int getHeight() {
		return height;
	}
	public int getWidth() {
		return width;
	}
}


